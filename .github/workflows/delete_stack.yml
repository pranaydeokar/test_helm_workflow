name: Delete CloudFormation Stacks

on:
  workflow_dispatch:
    inputs:
      stack_set_name:
        description: 'Name of the Stack Set to delete'
        required: true
        default: 'Access-analyser'
      stack_name:
        description: 'Name of the Stack to delete'
        required: true
        default: 'StackSet-Access-analyser'  # Provide a default if desired

jobs:
  delete_stacks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Delete Stack Instances
        run: |
          aws cloudformation delete-stack-instances \
            --stack-set-name ${{ github.event.inputs.stack_set_name }} \
            --deployment-targets Accounts=${{ secrets.TARGET_ACCOUNT }} \
            --regions us-east-1 \
            --retain-stacks

      - name: Wait for Stack Instances Deletion
        run: |
          echo "Waiting for stack instances deletion..."
          # Optional: Add logic to wait for stack instances deletion if necessary

      - name: Delete Stack Set
        run: |
          aws cloudformation delete-stack-set \
            --stack-set-name ${{ github.event.inputs.stack_set_name }}

      - name: Wait for Stack Set Deletion
        run: |
          echo "Waiting for stack set deletion..."
          # Optional: Add logic to wait for stack set deletion if necessary

      - name: Delete Stacks
        run: |
          echo "Deleting stack: ${{ github.event.inputs.stack_name }}"
          aws cloudformation delete-stack --stack-name "${{ github.event.inputs.stack_name }}"

      - name: Wait for Stack Deletions
        run: |
          echo "Waiting for stacks deletion..."
          # Optional: Add logic to wait for stack deletions if necessary
